---
import PostCard from "@components/CommonCard.astro";
import Pagination from "@components/Pagination.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import { getArticles } from "@models/Article";
import { getTags } from "@models/Tag";
import { getTagMetadata } from "src/site.config";

export async function getStaticPaths() {
	const allArticles = await getArticles();
	const allTags = await getTags();

	return allTags.flatMap((tag) => {
		const filteredPosts = allArticles.filter((article) =>
			article.tags.some((articleTag) => articleTag.id === tag.id),
		);
		filteredPosts.sort(
			(a, b) => new Date(b.pubDate).valueOf() - new Date(a.pubDate).valueOf(),
		);

		const pageSize = 12;
		const totalPages = Math.ceil(filteredPosts.length / pageSize);

		return Array.from({ length: totalPages }, (_, index) => ({
			params: { tag: tag.id, page: (index + 1).toString() },
			props: {
				page: {
					data: filteredPosts.slice(index * pageSize, (index + 1) * pageSize),
					currentPage: index + 1,
					lastPage: totalPages,
				},
			},
		}));
	});
}

const params = Astro.params;
const { page } = Astro.props;
const { title, description } = getTagMetadata(params.tag);
---

<BaseLayout title={title} description={description}>
  <div class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3">
    {page.data.map((article) => <PostCard article={article} />)}
  </div>

  <Pagination
    currentPage={page.currentPage}
    lastPage={page.lastPage}
    urlPrev={page.currentPage > 1
      ? `/tags/${params.tag}/${page.currentPage - 1}`
      : null}
    urlNext={page.currentPage < page.lastPage
      ? `/tags/${params.tag}/${page.currentPage + 1}`
      : null}
    basePath={`/tags/${params.tag}`}
    maxDisplayedPages={5}
  />
</BaseLayout>
