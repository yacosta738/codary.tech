---
import { Icon } from "astro-icon/components";

// Verificar si el usuario está autenticado mediante cookies (solo para SSR inicial)
const accessToken = Astro.cookies.get("sb-access-token")?.value;
const isAuthenticated = !!accessToken;
---

<div id="auth-button-container">
  {isAuthenticated ? (
    <a href="/account" class="auth-button account-button bg-[#1E1F23] text-white dark:bg-white dark:text-[#1E1F23] px-4 py-2 rounded-lg font-medium hover:bg-[#25262B] dark:hover:bg-gray-200 transition-colors flex items-center gap-2">
      <Icon name="tabler:user" class="size-5" />
      Mi cuenta
    </a>
  ) : (
    <a href="/signin" class="auth-button signin-button bg-[#1E1F23] text-white dark:bg-white dark:text-[#1E1F23] px-4 py-2 rounded-lg font-medium hover:bg-[#25262B] dark:hover:bg-gray-200 transition-colors">
      Iniciar sesión
    </a>
  )}
</div>

<script>
  // Verifica el estado de autenticación analizando las cookies del navegador
  function checkAuthState() {
    // Buscar las cookies de autenticación
    const cookies = document.cookie.split(';');
    let isAuthenticated = false;

    // Comprobar si existe la cookie de token de acceso
    for (const cookie of cookies) {
      const [name, _] = cookie.trim().split('=');
      if (name === 'sb-access-token') {
        isAuthenticated = true;
        break;
      }
    }

    return isAuthenticated;
  }

  // Actualizar el botón de autenticación según el estado
  function updateAuthButton() {
    const isAuthenticated = checkAuthState();
    const container = document.getElementById('auth-button-container');

    if (!container) return;

    if (isAuthenticated) {
      container.innerHTML = `
        <a href="/account" class="auth-button account-button bg-[#1E1F23] text-white dark:bg-white dark:text-[#1E1F23] px-4 py-2 rounded-lg font-medium hover:bg-[#25262B] dark:hover:bg-gray-200 transition-colors flex items-center gap-2">
          <span class="size-5 flex items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-user" width="20" height="20" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
              <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
              <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0"></path>
              <path d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"></path>
            </svg>
          </span>
          Mi cuenta
        </a>
      `;
    } else {
      container.innerHTML = `
        <a href="/signin" class="auth-button signin-button bg-[#1E1F23] text-white dark:bg-white dark:text-[#1E1F23] px-4 py-2 rounded-lg font-medium hover:bg-[#25262B] dark:hover:bg-gray-200 transition-colors">
          Iniciar sesión
        </a>
      `;
    }
  }

  // Inicializar el botón
  document.addEventListener('DOMContentLoaded', updateAuthButton);

  // Escuchar cambios en las cookies para actualizar la UI
  const cookieDescriptor = Object.getOwnPropertyDescriptor(Document.prototype, 'cookie') || {};
  const originalSetCookie = cookieDescriptor.set;
  Object.defineProperty(document, 'cookie', {
    ...cookieDescriptor,
    set: function(value) {
      if (originalSetCookie) originalSetCookie.call(this, value);
      // Después de cambios en las cookies, verificar estado de autenticación
      setTimeout(updateAuthButton, 100);
    }
  });

  // Verificar periódicamente el estado de autenticación
  setInterval(updateAuthButton, 5000);
</script>
