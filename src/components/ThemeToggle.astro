---
import { Icon } from "astro-icon/components";
---

<button id="theme-toggle" class="py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-xl border border-transparent text-black hover:bg-neutral-100 dark:text-white dark:hover:bg-neutral-700 transition disabled:opacity-50 disabled:pointer-events-none" aria-label="Toggle theme">
  <Icon name="tabler:sun" id="theme-toggle-light-icon" class="size-5 block dark:hidden" />
  <Icon name="tabler:moon" id="theme-toggle-dark-icon" class="size-5 hidden dark:block" />
</button>

<script>
  // Obtener el tema actual del sistema o localstorage
  function getTheme(): 'dark' | 'light' {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      const theme = localStorage.getItem('theme');
      if (theme === 'dark' || theme === 'light') {
        return theme;
      }
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  }

  // Aplicar el tema actual
  function applyTheme(theme: 'dark' | 'light') {
    const rootEl = document.documentElement;

    if (theme === 'dark') {
      rootEl.classList.add('dark');
    } else {
      rootEl.classList.remove('dark');
    }

    localStorage.setItem('theme', theme);
  }

  // Configurar el tema inicial
  document.addEventListener('DOMContentLoaded', () => {
    const theme = getTheme();
    applyTheme(theme);
  });

  // Alternar tema cuando se hace clic en el botÃ³n
  document.getElementById('theme-toggle')?.addEventListener('click', () => {
    const currentTheme = getTheme();
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    applyTheme(newTheme);
  });
</script>
