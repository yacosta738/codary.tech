---
import { type Lang, useTranslations } from "@/i18n";
import { cn } from "@/lib/utils";
import { Icon } from "astro-icon/components";
import type { HTMLAttributes } from "astro/types";
import IconButton from "./IconButton.astro";
import SocialLinks from "./SocialLinks.astro";

const locale = Astro.currentLocale as Lang;
const t = useTranslations(locale);

interface Props extends HTMLAttributes<"div"> {
	title: string;
	description: string;
	tags?: string[];
	url?: string;
}

const {
	title,
	description,
	tags = [],
	url = Astro.request.url,
	class: className,
	...attrs
} = Astro.props;

const socialMediaLinkShare: {
	name: string;
	url: string;
	icon: string | "tabler:world";
}[] = [
	{
		name: "ùïè (aka Twitter)",
		url: `https://x.com/intent/tweet?url=${url}&text=${title}${tags.length ? `&hashtags=${tags.join(",")}` : ""}`,
		icon: "tabler:brand-x",
	},
	{
		name: "Facebook",
		url: `https://www.facebook.com/sharer.php?u=${url}`,
		icon: "tabler:brand-facebook",
	},
	{
		name: "LinkedIn",
		url: `https://www.linkedin.com/sharing/share-offsite/?url=${url}`,
		icon: "tabler:brand-linkedin",
	},
	{
		name: "Reddit",
		url: `https://reddit.com/submit?url=${url}&title=${title}`,
		icon: "tabler:brand-reddit",
	},
	{
		name: "Telegram",
		url: `https://t.me/share/url?url=${url}&text=${description}`,
		icon: "tabler:brand-telegram",
	},
	{
		name: "WhatsApp",
		url: `https://api.whatsapp.com/send?text=${title}%20${url}`,
		icon: "tabler:brand-whatsapp",
	},
	{
		name: "Email",
		url: `mailto:?subject=${title}&body=${description}%20${url}`,
		icon: "tabler:mail",
	},
];
---

<div class="flex items-center gap-3 not-prose w-full" {...attrs}>
	<span
		class="text-secondary-foreground-light dark:text-secondary-foreground-dark font-inter text-xs tracking-widest uppercase leading-[140%] rounded"
	>
		{t("share")}
	</span>
	<SocialLinks
		class={cn(`flex items-center justify-center w-full max-w-fit gap-4`, className)}
		socials={socialMediaLinkShare}
	>
			<IconButton
				id="copy-url-button"
				aria-label={t("copy.link")}
				title={t("copy.link")}
				class="text-main-light dark:text-main-dark opacity-80 hover:opacity-100 transition-opacity cursor-pointer py-2 px-0"
				type="button"
			>
				<Icon name="tabler:copy" class="size-5" id="copy-icon" />
				<Icon name="tabler:check" class="size-5 hidden" id="copied-icon" />
			</IconButton>
	</SocialLinks>
</div>

<script>
	// Get the button element
	const copyButton = document.getElementById('copy-url-button');
	const copyIcon = document.getElementById('copy-icon');
	const copiedIcon = document.getElementById('copied-icon');

	if (copyButton) {
		copyButton.addEventListener('click', async () => {
			// Get the current URL from the page or use the one set in the component
			const url = window.location.href;

			try {
				// Copy to clipboard
				await navigator.clipboard.writeText(url);

				// Hide the copy icon and show the check icon
				copyIcon?.classList.add('hidden');
				copiedIcon?.classList.remove('hidden');

				// Reset icons after 2 seconds
				setTimeout(() => {
					copyIcon?.classList.remove('hidden');
					copiedIcon?.classList.add('hidden');
				}, 2000);
			} catch (err) {
				console.error('Failed to copy URL: ', err);
			}
		});
	}
</script>
