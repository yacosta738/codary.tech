---
import Button from "@atoms/Button.astro";
import { BRAND_NAME } from "@configs";

const articles = [
	{
		date: { day: 21, month: "FEBRERO", year: 2025 },
		title: `Esta Semana en ${BRAND_NAME} (21 Febrero 2025)`,
		description: `Noticias, actualizaciones, lanzamientos y contenido de ${BRAND_NAME} para la semana que termina el viernes 21 de febrero de 2025`,
		author: "Yuniel Acosta",
	},
	{
		date: { day: 14, month: "FEBRERO", year: 2025 },
		title: `Esta Semana en ${BRAND_NAME} (14 Febrero 2025)`,
		description: `Noticias, actualizaciones, lanzamientos y contenido de ${BRAND_NAME} para la semana que termina el viernes 14 de febrero de 2025`,
		author: "Yuniel Acosta",
	},
	{
		date: { day: 7, month: "FEBRERO", year: 2025 },
		title: `Esta Semana en ${BRAND_NAME} (7 Febrero 2025)`,
		description: `Noticias, actualizaciones, lanzamientos y contenido de ${BRAND_NAME} para la semana que termina el viernes 7 de febrero de 2025`,
		author: "Yuniel Acosta",
	},
	{
		date: { day: 31, month: "ENERO", year: 2025 },
		title: `Esta Semana en ${BRAND_NAME} (31 Enero 2025)`,
		description: `Noticias, actualizaciones, lanzamientos y contenido de ${BRAND_NAME} para la semana que termina el viernes 31 de enero de 2025`,
		author: "Yuniel Acosta",
	},
	{
		date: { day: 24, month: "ENERO", year: 2025 },
		title: `Esta Semana en ${BRAND_NAME} (24 Enero 2025)`,
		description: `Noticias, actualizaciones, lanzamientos y contenido de ${BRAND_NAME} para la semana que termina el viernes 24 de enero de 2025`,
		author: "Yuniel Acosta",
	},
	{
		date: { day: 17, month: "ENERO", year: 2025 },
		title: `Esta Semana en ${BRAND_NAME} (17 Enero 2025)`,
		description: `Noticias, actualizaciones, lanzamientos y contenido de ${BRAND_NAME} para la semana que termina el viernes 17 de enero de 2025`,
		author: "Yuniel Acosta",
	},
];

const ITEMS_PER_PAGE = 4;
---

<section class="py-16">
  <div class="container mx-auto px-4">
    <h2 class="text-xl mb-8">Explorar Últimas Publicaciones</h2>

    <div class="grid lg:grid-cols-2 gap-8" id="articles-grid">
      {articles.slice(0, ITEMS_PER_PAGE).map(article => (
        <article class="group cursor-pointer">
          <div class="p-6 flex gap-6 transition-colors">
            <div class="hidden lg:flex text-center min-w-[120px] bg-zinc-50 dark:bg-zinc-800 flex-col justify-center items-center p-4">
              <div class="text-5xl font-bold">{article.date.day}</div>
              <div class="text-xs text-zinc-500 dark:text-zinc-400 uppercase tracking-wider">
                {article.date.month},<br/>{article.date.year}
              </div>
            </div>
            <div class="flex-1">
              <h3 class="text-xl font-semibold mb-2 text-zinc-900 dark:text-white group-hover:text-zinc-600 dark:group-hover:text-zinc-300 transition-colors">
                {article.title}
              </h3>
              <p class="text-zinc-600 dark:text-zinc-400 mb-4 text-base leading-relaxed">{article.description}</p>
              <div class="text-sm text-zinc-500 flex items-center gap-2">
                <span>Por {article.author}</span>
                <span class="text-zinc-400 dark:text-zinc-600">-</span>
                <span class="uppercase tracking-wider text-xs">Esta Semana en {BRAND_NAME}</span>
              </div>
            </div>
          </div>
        </article>
      ))}
    </div>

    <div class="text-center mt-12">
      <Button
        id="load-more"
      >
        Cargar Más
      </Button>
    </div>
  </div>
</section>

<script is:inline define:vars={{ articles }}>
    let currentPage = 1;
    const itemsPerPage = 4;
    const totalPages = Math.ceil(articles.length / itemsPerPage);

    const loadMoreButton = document.getElementById('load-more');
    const articlesGrid = document.getElementById('articles-grid');

    // Mostrar botón si hay más páginas
    if (totalPages > 1) {
        loadMoreButton.style.display = 'inline-block';
    }

    loadMoreButton.addEventListener('click', () => {
        currentPage++;
        const start = itemsPerPage * (currentPage - 1);
        const end = start + itemsPerPage;

        const newArticles = articles.slice(start, end).map(article => `
            <article class="group cursor-pointer">
                <div class="p-6 flex gap-6 transition-colors">
                    <div class="hidden lg:flex text-center min-w-[120px] bg-zinc-50 dark:bg-zinc-900 flex-col justify-center items-center p-4">
                        <div class="text-5xl font-bold">${article.date.day}</div>
                        <div class="text-xs text-zinc-500 dark:text-zinc-400 uppercase tracking-wider">
                            ${article.date.month},<br/>${article.date.year}
                        </div>
                    </div>
                    <div class="flex-1">
                        <h3 class="text-xl font-semibold mb-2 text-zinc-900 dark:text-white group-hover:text-zinc-600 dark:group-hover:text-zinc-300 transition-colors">
                            ${article.title}
                        </h3>
                        <p class="text-zinc-600 dark:text-zinc-400 mb-4 text-base leading-relaxed">${article.description}</p>
                        <div class="text-sm text-zinc-500 flex items-center gap-2">
                            <span>Por ${article.author}</span>
                            <span class="text-zinc-400 dark:text-zinc-600">-</span>
                            <span class="uppercase tracking-wider text-xs">Esta Semana en {BRAND_NAME}</span>
                        </div>
                    </div>
                </div>
            </article>
        `).join('');

        articlesGrid.insertAdjacentHTML('beforeend', newArticles);

        // Ocultar botón si hemos llegado a la última página
        if (currentPage >= totalPages) {
            loadMoreButton.style.display = 'none';
        }
    });
</script>
